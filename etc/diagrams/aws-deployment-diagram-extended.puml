@startuml
!include https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/iwd_basic_styles.puml
!include https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-logo-sprite.puml

skinparam node {
    FontColor $IWD_MEDIUM_GREY
    BackgroundColor transparent
    BorderColor $IWD_MEDIUM_GREY
}

skinparam rectangle<<vpc>> {
    FontColor $IWD_MEDIUM_LIGHT_GREY
    BackgroundColor transparent
    BorderColor $IWD_MEDIUM_LIGHT_GREY
    roundcorner 20
    shadowing false
}

skinparam rectangle<<subnet>> {
    FontColor $IWD_MEDIUM_LIGHT_GREY
    BackgroundColor transparent
    BorderColor $IWD_MEDIUM_LIGHT_GREY
    roundcorner 20
    BorderWeight 2
    shadowing false
}

title ==My Fine Application Deployment Diagram

IwdIconOnly("Internet", "internet", "", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/internet-cloud.png>)

rectangle "//<size:12><<Cloud Host>></size>//\n==Amazon Web Services\n<$aws>" <<light>> as aws {

    IwdIconOnly("Credential Store", "secrets", "AWS Secrets Manager", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-secrets-manager-iwd.png>, "Stores sensitive information such as certificates and database passwords.")

    IwdIconOnly("Container Registry", "registry", "AWS Elastic Container Registry", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-ecr-iwd.png>, "Stores docker containers.")


    rectangle "==Virtual Private Cloud" <<vpc>> as vpc {

        IwdIconOnly("Internet Gateway", "gateway", "", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/main/icons/aws/aws-internet-gateway-iwd.png>)

        IwdIconOnly("Load Balancer", "loadBalancer", "AWS Application Load Balancer", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-load-balancer-iwd.png>)

        rectangle "==Public Subnet" <<subnet>> as subnet {

            IwdIconOnly("Output Gateway", "natGateway", "AWS NAT Gateway", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-nat-gateway-iwd.png>, "Supports output Internet connections and performs Network Address Translation.")

            node "==My Application Cluster\n<size:12>[ECS Cluster]</size>\n<img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-ecs-iwd.png>" as ecsCluster {
                IwdArtifact("My Fine Application", "app", "Moleculer Application", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/docker-container.png>, "My Fine application provides the access and does all the things. It also enables and simplifies.", "Docker Container")
            }
            
            IwdDatabase("My Fine Database", "db", "AWS RDS for PostgreSQL", <img:https://raw.githubusercontent.com/Intelliware/iwd-plantuml-styles/master/icons/aws/aws-rds-iwd.png>, "My Fine database stores all the data to do the thing.")

        }
    }
}

IwdArrow(loadBalancer, secrets, "obtains SSL certificates", "", "left")
IwdArrow(internet, gateway, "connects to", "HTTPS", "down")
IwdArrow(gateway, loadBalancer, "provides access to", "HTTPS", "down")
IwdArrow(loadBalancer, app, "provides access to", "HTTPS", "down")
IwdArrow(ecsCluster, registry, "loads docker container from", "", "left")
IwdArrow(app, db, "persists data", "psql", "down")
IwdArrow(app, natGateway, "manages outbound requests", "HTTPS", "up")
IwdArrow(app, secrets, "obtains database credentials", "", "left")
IwdArrow(natGateway, internet, "connects to other web endpoints", "HTTPS", "up")

@enduml
